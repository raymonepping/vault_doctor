name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
      fail-fast: false

    env:
      APP_NAME: vault_doctor

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Extract version from tag
        id: ver
        run: |
          TAG="${GITHUB_REF_NAME}"             # e.g. v0.1.1
          VERSION="${TAG#v}"                   # 0.1.1
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -trimpath -ldflags "-s -w -X 'main.Version=${{ steps.ver.outputs.version }}'" \
            -o "dist/${APP_NAME}_${{ steps.ver.outputs.version }}_${{ matrix.goos }}_${{ matrix.goarch }}" \
            ./cmd/${APP_NAME}
      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.tag }}
          name: "${{ env.APP_NAME }} ${{ steps.ver.outputs.tag }}"
          draft: false
          prerelease: false
          files: |
            dist/${{ env.APP_NAME }}_${{ steps.ver.outputs.version }}_darwin_amd64
            dist/${{ env.APP_NAME }}_${{ steps.ver.outputs.version }}_darwin_arm64
            dist/${{ env.APP_NAME }}_${{ steps.ver.outputs.version }}_linux_amd64
            dist/${{ env.APP_NAME }}_${{ steps.ver.outputs.version }}_linux_arm64
